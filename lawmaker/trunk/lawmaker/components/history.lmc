ChatHistory={Levels={}}
--[[
Simple chat history plugin for LawMaker
Supports max. no of lines to store, 4 date formats, 
Works like: !history <lines#>
Thx to: DCH++ devs ;-)
Also thanks to TiMeTrAVelleR for testing
]]

Run(path.."cfg/history.ini")
ChatHistory.Lines={}
function ChatHistory.Display(user,data,env)
  if table.getn(ChatHistory.Lines)==0 then SendTxt(user,env,Bot.name,"History buffer is empty. :(") return end
  local _,_,no=string.find(data,"%b<>%s+%S+%s+(%d+)")
  local msg,hey="\r\n\r\n"..string.rep("=",15).." Start of chat history "..string.rep("=",13).."\r\n\r\n",""
  if not no then no=ChatHistory.LinesToDisplay end
  if tonumber(no) >= table.getn(ChatHistory.Lines) then
    hey="\r\n\r\nI decreased the number of lines displayed to "..table.getn(ChatHistory.Lines)..", cause this is all I can provide now."
    msg=msg..table.concat(ChatHistory.Lines,"\r\n").."\r\n"
  else
    local orig=table.getn(ChatHistory.Lines)
    table.setn(ChatHistory.Lines,no)
    table.sort(ChatHistory.Lines,function(v1,v2) return v1>v2 end)
    msg=msg..table.concat(ChatHistory.Lines,"\r\n").."\r\n"
    table.setn(ChatHistory.Lines,orig)
    table.sort(ChatHistory.Lines)
  end
  msg=msg..hey.."\r\n\r\n"..string.rep("=",15).." End of chat history "..string.rep("=",15)
  user:SendPM(Bot.name,msg)
end

function ChatHistory.ChatArrival(user,data)
  local _,_,cmd=string.find(data,"%b<>%s+[%!%+%#](%S+)")
  local ptxcmd=
    {
      ["op"]=5,
      ["startscript"]=5,
      ["stopscript"]=5,
      ["restartscript"]=5,
      ["reloadtxt"]=5,
      ["stat"]=1
    }
  if not commandtable[cmd] and not ptxcmd[cmd] then
    local datetbl={"%H:%M","%I:%M %p","%Y. %m. %d. HH:MM","%c"}
    if table.getn(ChatHistory.Lines) >= ChatHistory.LinesToStore then table.remove(ChatHistory.Lines,1) end
    if ChatHistory.DateFormat==0 or ChatHistory.DateFormat > table.getn(datetbl) then dt="" else dt="["..os.date(datetbl[ChatHistory.DateFormat]).."]" end
    table.insert(ChatHistory.Lines,dt.." "..data)
  end
end

function ChatHistory.OnExit()
  local f=io.open("lawmaker/components/metafiles/chathistory.dat","w+")
  f:write(table.concat(ChatHistory.Lines,"\n"))
  f:close()
end

function ChatHistory.Main()
  local f=io.open("lawmaker/components/metafiles/chathistory.dat","r")
  if f then
    for line in f:lines() do
      table.insert(ChatHistory.Lines,line)
    end
    f:close()
  end
end

RegFunc("chatarr","storing main line to history",ChatHistory.ChatArrival,{})
RegFunc("onexit","storing history in file",ChatHistory.OnExit,{})
RegFunc("main","loading history from file",ChatHistory.Main,{})
RegCmd("history",ChatHistory.Display,{},ChatHistory.Levels.Show,"<lines>\t\t\t\tDisplays desired amount of lines from chat history (if not specified, defaults to "..ChatHistory.LinesToDisplay..".")
RegRC(ChatHistory.Levels.Show,"1 3","Info\\Show chat history","!history %[line:Lines to show (Enter defaults to "..ChatHistory.LinesToDisplay.."):")