RandomCustomAnnounce={Levels={},welcome={},leave={}} -- do not touch
--[[
Custom random welcome/leave system
LMCA version
bastya_elvtars, 2005.06. 20.
Scripters: you may have noticed the order in deletion. It is reverse order and avoids effect of automatic table.setn.
]]

Run(path.."cfg/randomcustomannounce.ini")

function RandomCustomAnnounce.Add(user,data,env,what)
  if what=="welcome" then
    local _,_,pt1,pt2=string.find(data,"%b<>%s+%S+%s+(.+)%s:%s(.+)")
    if pt1 and pt2 then
      if not RandomCustomAnnounce.welcome[user.sName] then RandomCustomAnnounce.welcome[user.sName]={} end
      table.insert(RandomCustomAnnounce.welcome[user.sName],pt1.." "..user.sName.." "..pt2)
      RandomCustomAnnounce.Save()
      SendTxt(user,env,Bot.name,"Successfully added the message.")
    else
      SendTxt(user,env,Bot.name,"Incorrect usage! It's !addwelcome <pt1> : <pt2>.")
    end
  else
    local _,_,mess=string.find(data,"%b<>%s+%S+%s+(.+)")
    if mess then
      if not RandomCustomAnnounce.leave[user.sName] then RandomCustomAnnounce.leave[user.sName]={} end
      table.insert(RandomCustomAnnounce.leave[user.sName],user.sName.." "..mess)
      RandomCustomAnnounce.Save()
      SendTxt(user,env,Bot.name,"Successfully added the message.")
    else
      SendTxt(user,env,Bot.name,"Incorrect usage! It's !addleave <message>.")
    end
  end
end

function RandomCustomAnnounce.Show (user,data,env,what)
  local tbl
  if what=="welcome messages" then tbl=RandomCustomAnnounce.welcome else tbl=RandomCustomAnnounce.leave end
  local _,_,param=string.find(data,"%b<>%s+%S+%s+(%S+)")
  param=param or user.sName
  if tbl[param] then
    if table.getn(tbl[param]) > 0 then
      local msg="Here you go, "..what.." of "..param..":\r\n==============================\r\n"
      for a=1,table.getn(tbl[param]) do
        msg=msg..a..". "..tbl[param][a].."\r\n"
      end
      msg=msg.."=============================="
      user:SendPM(Bot.name,msg)
    else SendTxt(user,env,Bot.name,"User has no messages."); end
  else SendTxt(user,env,Bot.name,"User has no messages."); end
  tbl=nil; Clear()
end

function RandomCustomAnnounce.Save()
  local parsing=function (arr)
    local msg=""
    for a,b in pairs(arr) do
      msg=msg..string.format("%q",b)..","
    end
    return msg
  end
  local f=io.open("lawmaker/components/metafiles/randomcustomannounce.dat","w+")
  local msg="RandomCustomAnnounce.welcome={\n"
  for a,b in RandomCustomAnnounce.welcome do
    msg=msg..string.format("[%q]",a).."={"..parsing(b).."},\n"
  end
  msg=msg.."}\n"
  msg=msg.."RandomCustomAnnounce.leave={\n"
  for a,b in RandomCustomAnnounce.leave do
    msg=msg..string.format("[%q]",a).."={"..parsing(b).."},\n"
  end
  msg=msg.."}"
  f:write(msg)
  f:close()
end

function RandomCustomAnnounce.NoAnnounce (user,data,env)
  local _,_,switch=string.find(data,"%b<>%s+%S+%s+(%S+)")
  if switch=="on" then
    if not RandomCustomAnnounce.NoAnnounceList[user.sName] then
      RandomCustomAnnounce.NoAnnounceList[user.sName]=1
      SendTxt(user,env,Bot.name,"You will not be announced on login/logout from now on.")
      savefile(RandomCustomAnnounce.NoAnnounceList,"lawmaker/components/metafiles/noannounce.dat")
    else
      SendTxt(user,env,Bot.name,"Already on the noannounce list...")
    end
  elseif switch=="off" then
    if not RandomCustomAnnounce.NoAnnounceList[user.sName] then
      SendTxt(user,env,Bot.name,"Not on the noannounce list...")
    else
      RandomCustomAnnounce.NoAnnounceList[user.sName]=nil
      SendTxt(user,env,Bot.name,"You will be announced on login/logout from now on.")
      savefile(RandomCustomAnnounce.NoAnnounceList,"lawmaker/components/metafiles/noannounce.dat")
    end
  else
    SendTxt(user,env,Bot.name,"The switch can only be on or off!")
  end
end

function RandomCustomAnnounce.Delete(user,data,env,what)
  local tbl
  if what=="welcome" then tbl=RandomCustomAnnounce.welcome else tbl=RandomCustomAnnounce.leave end
  local _,_,arg=string.find(data,"%b<>%s+%S+%s+(.+)")
--[[   I faced a problem here. If an array consists of n elements, then if you remove the 3rd one,
  the ones following it will have 1 subtracted from their index number.
  (Lua always calls table.setn after table.remove occurs.)
  This results in unwanted deletions afterwards... :-(
  So I needed a workaround... ]]
  if arg then -- We have some args, containing the index numbers of elements to be removed.
    -- First we create an array.
    local parmtbl={}
    -- While we find digits in the args,...
    for n in string.gfind(arg,"(%d+)") do
      -- ... we insert them to that array.
      table.insert(parmtbl,n)
    end
    -- We sort the array elements.
    table.sort(parmtbl)
    -- And we go through the elements of it, in a reverse order.
    -- Thus, we always remove from BEFORE the last removed element.
    -- No longer shifting in index numbers.
    for k=table.getn(parmtbl),1,-1 do
      local id=tonumber(parmtbl[k])
      if tbl[user.sName][id] then
        SendTxt(user,env,Bot.name,"Message #"..id.." deleted!")
	table.remove(tbl[user.sName],id)
        if table.getn(tbl[user.sName])==0 then tbl[user.sName]=nil end
        RandomCustomAnnounce.Save()
      else
        SendTxt(user,env,Bot.name,"Message #"..id.." not found!")
      end
    end
  else
    SendTxt(user,env,Bot.name,"Invalid usage! See the help.")
  end
end

function RandomCustomAnnounce.NewUserConnected(user)
  if RandomCustomAnnounce.welcome[user.sName] and not RandomCustomAnnounce.NoAnnounceList[user.sName] then
    SendToAll(Bot.name,RandomCustomAnnounce.welcome[user.sName][math.random(table.getn(RandomCustomAnnounce.welcome[user.sName]))])
  end
end

function RandomCustomAnnounce.UserDisconnected(user)
  if RandomCustomAnnounce.leave[user.sName] and not RandomCustomAnnounce.NoAnnounceList[user.sName] then
    SendToAll(Bot.name,RandomCustomAnnounce.leave[user.sName][math.random(table.getn(RandomCustomAnnounce.leave[user.sName]))])
  end
end

function RandomCustomAnnounce.Main()
  if loadfile("lawmaker/components/metafiles/randomcustomannounce.dat") then
    dofile("lawmaker/components/metafiles/randomcustomannounce.dat")
  else
    local f=io.open("lawmaker/components/metafiles/randomcustomannounce.dat","w+")
    f:write("")
    f:close()
  end
  RandomCustomAnnounce.NoAnnounceList=maketable("lawmaker/components/metafiles/noannounce.dat")
end

RegFunc("nuc","random welcome message",RandomCustomAnnounce.NewUserConnected,{})
RegFunc("userdisc","say goodbye to user",RandomCustomAnnounce.UserDisconnected,{})
RegFunc("main","loading welcome/leave messages",RandomCustomAnnounce.Main,{})
RegCmd("addwelcome",RandomCustomAnnounce.Add,{"welcome"},RandomCustomAnnounce.Levels.AddDel,"<pt1> : <pt2>\t\t\t\tAdds a random welcome message into your kit :)")
RegCmd("showwelcome",RandomCustomAnnounce.Show,{"welcome messages"},RandomCustomAnnounce.Levels.Show,"<user>\t\t\t\tShows random welcomes of the selected user, with no parameters it shows your own ones.")
RegCmd("delwelcome",RandomCustomAnnounce.Delete,{"welcome"},RandomCustomAnnounce.Levels.AddDel,"<ID>\t\t\t\t\tDeletes the welcome message with the given number. Multiple numbers can be added, separated by spaces.")
RegCmd("addleave",RandomCustomAnnounce.Add,{"leave"},RandomCustomAnnounce.Levels.AddDel,"<pt1> : <pt2>\t\t\t\tAdds a random leave message into your kit :)")
RegCmd("showleave",RandomCustomAnnounce.Show,{"goodbye messages"},RandomCustomAnnounce.Levels.Show,"<user>\t\t\t\tShows random leaves of the selected user, with no parameters it shows your own ones.")
RegCmd("delleave",RandomCustomAnnounce.Delete,{"leave"},RandomCustomAnnounce.Levels.AddDel,"<ID>\t\t\t\t\tDeletes the leave message with the given number. Multiple numbers can be added, separated by spaces.")
RegCmd("noannounce",RandomCustomAnnounce.NoAnnounce,{},RandomCustomAnnounce.Levels.AddDel,"<on/off>\t\t\t\tEnables/disables announcing for you.")
RegRC(RandomCustomAnnounce.Levels.AddDel,"1 3","RandomCustomAnnounce\\Add\\a welcome message...","!addwelcome %[line:Part before your nick:] : %[line:Part after your nick:]")
RegRC(RandomCustomAnnounce.Levels.AddDel,"1 3","RandomCustomAnnounce\\Add\\a goodbye message...","!addleave %[line:Part after your nick:]")
RegRC(RandomCustomAnnounce.Levels.Show,"1 3","RandomCustomAnnounce\\Show\\a user's welcome messages...","!showwelcome %[line:Nick (enter for yours):]")
RegRC(RandomCustomAnnounce.Levels.Show,"1 2","RandomCustomAnnounce\\Show\\USER's welcome messages...","!showwelcome %[nick]")
RegRC(RandomCustomAnnounce.Levels.Show,"1 3","RandomCustomAnnounce\\Show\\a user's goodbye messages...","!showleave %[line:Nick (enter for yours):]")
RegRC(RandomCustomAnnounce.Levels.Show,"1 2","RandomCustomAnnounce\\Show\\USER's goodbye messages...","!showleave %[nick]")
RegRC(RandomCustomAnnounce.Levels.AddDel,"1 3","RandomCustomAnnounce\\Enable/disable\\Enable for yourself","!noannounce off")
RegRC(RandomCustomAnnounce.Levels.AddDel,"1 3","RandomCustomAnnounce\\Enable/disable\\Disable for yourself","!noannounce on")