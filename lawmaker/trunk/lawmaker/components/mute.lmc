Mute={};Mute.Levels={} -- do not touch this line
--[[
Mute plugin for LawMaker by bastya_elvars
Originally written by kepp and Typhoon
]]

--- Mute Stuff
Mute.Time = 5 --- in minutes, the time which the victim gets muted for

Mute.Levels.Mute=4      -- mute
Mute.Levels.UnMute=4    -- unmute
Mute.Levels.ShowMuted=4 -- show muted

Mute.MUTE={}

function Mute.DoMute(user, data,env)
  local _,_,vic = string.find(data,"%b<>%s+%S+%s+(%S+)")
  if vic then
    if vic==Bot.name then
      SendTxt(user,env,Bot.name,"You are muting me? He-he-he, good joke! Really funny! Now tell me, "..user.sName..", How good is a phonecall if you're unable to speak? ;) // "..Bot.name)
      Mute.MUTE[user.sName]=0 return 1
    else
      local victim = GetItemByName(vic)
      if victim == nil then
        SendTxt(user,env,Bot.name,vic.." is not online...")
      else
        if not victim.bOperator then
          if not Mute.MUTE[victim.sName] then
            Mute.MUTE[victim.sName] = 0
            SendToAll(Bot.name,"Tell me, "..victim.sName..", How good is a phonecall if you're unable to speak? ;) // "..user.sName)
          else
            SendTxt(user,env,Bot.name,vic.." is already muted...")
          end
	else
          SendTxt(user,env,Bot.name,vic.." is an operator, don't mute operators... Now tell me, "..user.sName..", How good is a phonecall if you're unable to speak? ;) // "..Bot.name)
          Mute.MUTE[user.sName]=0 return 1
	end
      end
    end
  else 
    SendTxt(user,env,Bot.name,"Please specify who to mute!")
  end
end

function Mute.DoUnMute(user, data,env)
  local _,_,vic = string.find(data,"%b<>%s+%S+%s+(%S+)")
  if vic then
    local victim = GetItemByName(vic)
    if victim == nil then
      SendTxt(user,env,Bot.name,"User is not online..")
    else
      if Mute.MUTE[victim.sName] then
        Mute.MUTE[victim.sName] = nil
        SendToAll(Bot.name, victim.sName.." Unmuted ;) // "..user.sName)
      else
        SendTxt(user,env,Bot.name,vic.." was not muted....")
      end
    end
  else
    SendTxt(user,env,Bot.name,"Please specify who to unmute!!!")
  end
end

function Mute.ShowMuted(user,env)
  local disp = ""
  if table.getn(Mute.MUTE)~=0 then
    for a, b in Mute.MUTE do
      disp = disp.."\t\t\t\t\t • "..a.."\r\n"
    end
  else
    disp="\t\t\t\t\t   Nobody is muted at the moment.\r\n"
  end
  user:SendPM(Bot.name,"\r\n\r\n\t\t\t\t\t(— ·.¸¸.->   All muted users are:   <-.¸¸.·´—)\r\n\r\n"..disp)
end

function Mute.OnTimer()
  for a,b in Mute.MUTE do
    Mute.MUTE[a]=Mute.MUTE[a]+1
    if Mute.MUTE[a]==Mute.Time*60 then
      Mute.MUTE[a]=nil -- every muted user has a unique timer
      if GetItemByName(a) then
        GetItemByName(a):SendData(Bot.name,"Time up, you are unmuted now.")
      end
    end
  end
end

function Mute.ChatArrival(user,data)
  if Mute.MUTE[user.sName] then
    local _,_,cmd=string.find(data,"%b<>%s+[%!%+%#](%S+)")
    local ptxcmd=
      {
	["op"]=5,
	["startscript"]=5,
	["stopscript"]=5,
	["restartscript"]=5,
	["reloadtxt"]=5,
	["stat"]=1
      }
    if not commandtable[cmd] and not ptxcmd[cmd] then
      user:SendData(Bot.name, "You are currently muted and unable to speak in main.")
      return "shit"
    end
  end
end

RegCmd("mute",Mute.DoMute,{},Mute.Levels.Mute,"\t\t\t\tMutes a user for "..Mute.Time.." minutes, disabling his/her posting to main.")
RegCmd("gag",Mute.DoMute,{},Mute.Levels.Mute,"<nick>\t\t\t\tMutes a user for "..Mute.Time.." minutes, disabling his/her posting to main.")
RegCmd("unmute",Mute.DoUnMute,{},Mute.Levels.UnMute,"<nick>\t\t\t\tUnmutes a user, re-enabling him/her to post into main.")
RegCmd("ungag",Mute.DoUnMute,{},Mute.Levels.UnMute,"<nick>\t\t\t\tUnmutes a user, re-enabling him/her to post into main.")
RegCmd("showmuted",Mute.ShowMuted,{},Mute.Levels.ShowMuted,"\t\t\t\t\tShows all muted users.")
RegFunc("ont","mute timer part",Mute.OnTimer,{})
RegFunc("chatarr","muting in mainchat",Mute.ChatArrival,{})
RegRC(Mute.Levels.Mute,"1 2","Mute\\Mute USER","!mute %[nick]")
RegRC(Mute.Levels.UnMute,"1 2","Mute\\UnMute USER","!unmute %[nick]")
RegRC(Mute.Levels.ShowMuted,"1 3","Mute\\Show muted users","!showmuted")